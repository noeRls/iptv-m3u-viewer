{"version":3,"sources":["services/urls.ts","comonents/Layout/Header.tsx","store/selector/app.tsx","services/constants.ts","store/selector/entrys.tsx","services/utils.ts","store/reducer/thunks.ts","store/reducer/reducer.tsx","comonents/Layout/Snackbar.tsx","comonents/Layout/Layout.tsx","scenes/Files/FileComponent.tsx","scenes/Files/FileUploader.tsx","scenes/Files/Files.tsx","comonents/PrivateRoute.tsx","comonents/DisplayIf.tsx","scenes/Entrys/EntryComponent.tsx","scenes/Entrys/Entrys.tsx","scenes/Entrys/QuickFilter/QuickFilter.tsx","scenes/Entrys/EntrysPage.tsx","scenes/Filters/WordsInput/WordsInput.tsx","scenes/Filters/FilterComponent.tsx","scenes/Filters/FiltersPage.tsx","App.tsx","serviceWorker.ts","store/store.ts","index.tsx","scenes/Files/index.module.css","scenes/Filters/index.module.css","comonents/Layout/layout.module.css","scenes/Entrys/QuickFilter/index.module.css","scenes/Filters/WordsInput/index.module.css","scenes/Entrys/entry.module.css","scenes/Entrys/entrys.module.css"],"names":["urls","useStyle","makeStyles","listIcon","color","minWidth","paddingRight","title","Header","overrideStyle","history","useHistory","navigationItems","url","icon","text","FilterList","Description","AppBar","position","Toolbar","Typography","variant","className","map","item","onClick","push","MenuItem","ListItemIcon","ListItemText","primary","selectAppState","state","app","selectAppIsLoaded","createSelector","loaded","selectSnackbar","snakbar","STORAGE_KEY","selectFileFilter","fileFilter","selectAllFiles","files","selectFiles","length","file","find","name","selectPemanentFilter","permanentFilter","selectUsingPermanentFilter","usingPermanentFilter","selectSearch","search","selectGroupFilter","groupFilter","selectTemporaryFilter","groupName","filters","includeKeywords","split","selectFilters","temporaryFilter","selectAllGroups","Object","keys","reduce","result","entrys","forEach","entry","selectEntry","filterWithGroupName","filter","filterWithoutGroupName","globalExclude","excludeKeywords","globalInclude","entryName","toLowerCase","f","every","word","includes","some","filterEntrys","selectGroups","localStorageSet","key","data","set","localStoageGet","get","loadFile","createAsyncThunk","thunkAPI","a","parse","savePath","getState","i","savedPath","catch","console","error","id","items","group","fileName","logo","tvg","language","contry","country","loadApp","JSON","setSnackbarMessage","message","severity","open","cleanFilter","w","appSlice","createSlice","initialState","reducers","snackbarVisibillityChanged","action","payload","snackBarMessagePublished","addFilter","stringify","setSearch","setGroupNameFilter","deleteFile","index","findIndex","splice","modifyFilter","update","deleteFilter","setUsingPermanentFilter","setFileFilter","extraReducers","builder","addCase","fulfilled","rejected","actions","Snackbar","useSelector","dispatch","useDispatch","onClose","useCallback","autoHideDuration","Alert","Layout","children","style","container","header","bodyContainer","contentContainer","FileComponent","onDownload","Error","fileDownload","onDelete","Card","fileCard","IconButton","FileUploader","onFileChange","e","target","reader","FileReader","readAsText","onloadend","content","type","onChange","accept","fileUploadInput","htmlFor","Button","component","Files","filesContainer","PrivateRoute","other","CircularProgress","DisplayIf","expr","onElse","EntryComponent","shouldDisplayFile","success","copy","setTimeout","imageContainer","src","image","Entrys","useClasses","padding","QuickFilter","classes","groups","newValue","onSearchChanged","value","onGroupNameChange","toogleUsePermanentFilter","TextField","cl","placeholder","InputProps","startAdornment","InputAdornment","SearchOutlined","Autocomplete","options","renderInput","params","label","getOptionLabel","FormControlLabel","labelPlacement","control","Switch","checked","MAX_PER_PAGE","EntrysPage","useState","pageNb","setPageNb","maxPages","Math","floor","slice","disabled","NavigateBefore","NavigateNext","useStyleOverride","deleteIcon","inputRoot","flexWrap","inputInput","width","flexGrow","WordsInput","words","positive","negative","styleOverride","input","setInput","onWordAdded","onWordDelete","undefined","root","cx","positiveWord","negativeWord","endAdornment","FilterComponent","filterCard","_","defaultValue","FiltersPage","cardsContainer","idx","App","useEffect","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3792e898.chunk.js","sourcesContent":["export const urls = {\n    home: '/',\n    filters: '/filters',\n    files: '/files'\n};\n","import React from 'react';\nimport {\n    AppBar,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    MenuItem,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport { FilterList, Description } from '@material-ui/icons';\nimport ListIcon from '@material-ui/icons/List';\nimport { urls } from 'services/urls';\nimport { useHistory } from 'react-router';\n\nconst useStyle = makeStyles({\n    listIcon: {\n        color: 'white',\n        minWidth: '0px',\n        paddingRight: '10px'\n    },\n    title: {\n        paddingRight: '20px'\n    }\n});\n\nexport const Header = () => {\n    const overrideStyle = useStyle();\n    const history = useHistory();\n    const navigationItems = [\n        {\n            url: urls.home,\n            icon: <ListIcon />,\n            text: 'Channels',\n        },\n        {\n            url: urls.filters,\n            icon: <FilterList />,\n            text: 'Filters',\n        },\n        {\n            url: urls.files,\n            icon: <Description />,\n            text: 'Files',\n        },\n    ];\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"h6\" className={overrideStyle.title} >IPTV M3U Viewer</Typography>\n                {navigationItems.map((item) => (\n                    <div key={item.text} onClick={() => history.push(item.url)}>\n                        <MenuItem>\n                            <ListItemIcon className={overrideStyle.listIcon}>{item.icon}</ListItemIcon>\n                            <ListItemText primary={item.text} />\n                        </MenuItem>\n                    </div>\n                ))}\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import { RootState } from '../store';\nimport { createSelector } from 'reselect'\n\nexport const selectAppState = (state: RootState) => state.app;\n\nexport const selectAppIsLoaded = createSelector(selectAppState, (app) => app.loaded);\n\nexport const selectSnackbar = createSelector(selectAppState, (app) => app.snakbar);\n","export const STORAGE_KEY = {\n    FILES: 'files',\n    FILTERS: 'filters',\n}","import { createSelector } from 'reselect'\nimport { selectAppState } from './app';\nimport { Entry, File, Filter } from 'types';\n\nexport const selectFileFilter = createSelector(selectAppState, state => state.fileFilter);\nexport const selectAllFiles = createSelector(selectAppState, state => state.files);\nexport const selectFiles = createSelector(\n    selectAllFiles,\n    selectFileFilter,\n    (files, fileFilter): File[] => {\n        if (!fileFilter || fileFilter.length === 0) {\n            return files;\n        }\n        const file = files.find(file => file.name === fileFilter);\n        return file ? [file] : [];\n    }\n);\n\nexport const selectPemanentFilter = createSelector(selectAppState, state => state.permanentFilter);\n\nexport const selectUsingPermanentFilter = createSelector(selectAppState, state => state.usingPermanentFilter);\n\nexport const selectSearch = createSelector(selectAppState, state => state.search);\nexport const selectGroupFilter = createSelector(selectAppState, state => state.groupFilter);\nconst selectTemporaryFilter = createSelector(\n    selectGroupFilter,\n    selectSearch,\n    (groupName, search): Filter[] => {\n        const filters: Filter[] = [];\n        if (search.length > 0) {\n            filters.push({ includeKeywords: search.split(' ') });\n        }\n        if (groupName.length > 0) {\n            filters.push({ groupName });\n        }\n        return filters;\n    }\n);\n\nexport const selectFilters = createSelector(\n    selectPemanentFilter,\n    selectTemporaryFilter,\n    selectUsingPermanentFilter,\n    (permanentFilter, temporaryFilter, usingPermanentFilter): Filter[] =>\n        usingPermanentFilter ? [...permanentFilter, ...temporaryFilter] : temporaryFilter,\n)\n\nexport const selectAllGroups = createSelector(\n    selectFiles,\n    (files): string[] => Object.keys(files.reduce<Record<string, boolean>>((result, file) => {\n        file.entrys.forEach(entry => result[entry.groupName] = true);\n        return result;\n    }, {})),\n)\n\nconst filterEntrys = (entrys: Entry[], filters: Filter[]): Entry[] => {\n    const filterWithGroupName = filters.filter(filter => filter.groupName);\n    const filterWithoutGroupName = filters.filter(filter => !filter.groupName);\n\n    const globalExclude = filterWithoutGroupName.reduce<string[]>((result, filter) => {\n        if (!filter.excludeKeywords) {\n            return result;\n        }\n        return [...result, ...filter.excludeKeywords];\n    }, []);\n    const globalInclude = filterWithoutGroupName.reduce<string[]>((result, filter) => {\n        if (!filter.includeKeywords) {\n            return result;\n        }\n        return [...result, ...filter.includeKeywords];\n    }, []);\n\n    return entrys.filter((entry => {\n        const entryName = entry.name.toLowerCase();\n        if (filterWithGroupName.length > 0) {\n            const filter = filterWithGroupName.find(f => f.groupName === entry.groupName);\n            if (!filter) {\n                return false;\n            }\n            if (filter.includeKeywords && filter.includeKeywords.length > 0 &&\n                !filter.includeKeywords.every(word => entryName.includes(word))\n            ) {\n                return false;\n            }\n            if (filter.excludeKeywords && filter.excludeKeywords.some(word => entryName.includes(word))) {\n                return false;\n            }\n        }\n        if (globalInclude.length > 0 && !globalInclude.every(word => entryName.includes(word))) {\n            return false;\n        }\n        if (globalExclude.some(word => entryName.includes(word))) {\n            return false;\n        }\n        return true;\n    }));\n};\n\nexport const selectEntry = createSelector(selectFiles, selectFilters,\n    (files, filters): Entry[] => {\n        return files.reduce<Entry[]>((result, file) => [\n            ...result,\n            ...filterEntrys(file.entrys, filters),\n        ], []);\n    }\n)\n\nexport const selectGroups = createSelector(\n    selectEntry,\n    (entrys) => Object.keys(entrys.reduce<Record<string, boolean>>((result, entry) => {\n        result[entry.groupName] = true;\n        return result;\n    }, {}))\n)","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop: () => void = () => {};\n\nimport { get, set } from 'idb-keyval';\n\nexport const localStorageSet = (key: string, data: string): Promise<void> => {\n    return set(key, data);\n}\n\nexport const localStoageGet = (key: string): Promise<string | null | undefined> => {\n    return get(key);\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { parse } from 'iptv-playlist-parser';\nimport { STORAGE_KEY } from 'services/constants';\nimport { selectAllFiles } from 'store/selector/entrys';\nimport { RootState } from 'store/store';\nimport { File, Filter } from 'types';\nimport { localStoageGet, localStorageSet } from 'services/utils';\n\nexport const loadFile = createAsyncThunk('files/load', async ({ name, data }: { name: string, data: string }, thunkAPI): Promise<File> => {\n    const file = parse(data);\n    let savePath: string | null = null;\n    const files = selectAllFiles(thunkAPI.getState() as RootState)\n    for (let i = 0; ; i++) {\n        savePath = `file:${name}${i}`;\n        if (!files.some(f => f.savedPath === savePath)) {\n            break;\n        }\n    }\n    localStorageSet(savePath, data).catch(console.error);\n    return {\n        id: savePath,\n        name,\n        savedPath: savePath,\n        entrys: file.items.map(item => ({\n            groupName: item.group.title,\n            fileName: name,\n            logo: item.tvg.logo,\n            language: item.tvg.language,\n            name: item.name,\n            url: item.url,\n            contry: item.tvg.country\n        })),\n    }\n});\n\nexport const loadApp = createAsyncThunk('load', async (): Promise<{ filters: Filter[], files: File[] }> => {\n    const files = await localStoageGet(STORAGE_KEY.FILES);\n    const filters = await localStoageGet(STORAGE_KEY.FILTERS);\n    return {\n        files: files ? JSON.parse(files) as File[] : [],\n        filters: filters ? JSON.parse(filters) as Filter[] : []\n    };\n});\n\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AlertProps } from '@material-ui/lab';\nimport { File, Filter } from 'types';\nimport { loadApp, loadFile } from './thunks';\nimport { STORAGE_KEY } from 'services/constants';\nimport { localStorageSet } from 'services/utils';\n\nexport interface AppSliceState {\n    loaded: boolean,\n    files: File[],\n    search: string,\n    groupFilter: string,\n    fileFilter: string,\n    permanentFilter: Filter[],\n    usingPermanentFilter: boolean,\n    snakbar: {\n        open: boolean,\n        message?: string,\n        severity?: AlertProps['severity'],\n    };\n}\n\nconst initialState: AppSliceState = {\n    loaded: false,\n    fileFilter: '',\n    search: '',\n    usingPermanentFilter: true,\n    groupFilter: '',\n    permanentFilter: [],\n    files: [],\n    snakbar: {\n        open: false,\n    },\n};\n\nconst setSnackbarMessage = (state: AppSliceState, message: string, severity: AlertProps['severity']) => {\n    state.snakbar = {\n        ...state.snakbar,\n        open: true,\n        message,\n        severity,\n    };\n};\n\nconst cleanFilter = ({ excludeKeywords, includeKeywords, groupName }: Filter): Filter => ({\n    excludeKeywords: excludeKeywords?.map(w => w.toLowerCase()),\n    includeKeywords: includeKeywords?.map(w => w.toLowerCase()),\n    groupName\n});\n\nexport const appSlice = createSlice({\n    name: 'app',\n    initialState: initialState,\n    reducers: {\n        snackbarVisibillityChanged: (state, action: PayloadAction<boolean>) => {\n            state.snakbar.open = action.payload;\n        },\n        snackBarMessagePublished: (\n            state,\n            action: PayloadAction<{ message: string; severity: AlertProps['severity'] }>,\n        ) => {\n            setSnackbarMessage(state, action.payload.message, action.payload.severity);\n        },\n        addFilter: (state, { payload }: PayloadAction<Filter>) => {\n            state.permanentFilter.push(cleanFilter(payload));\n            localStorageSet(STORAGE_KEY.FILTERS, JSON.stringify(state.permanentFilter)).catch(console.error);\n        },\n        setSearch: (state, { payload }: PayloadAction<string>) => {\n            state.search = payload.toLowerCase();\n        },\n        setGroupNameFilter: (state, { payload }: PayloadAction<string>) => {\n            state.groupFilter = payload;\n        },\n        deleteFile: (state, { payload }: PayloadAction<File>) => {\n            const index = state.files.findIndex(file => file.id === payload.id);\n            if (index === -1) {\n                setSnackbarMessage(state, 'Failed to delete file', 'error');\n                return;\n            }\n            state.files.splice(index, 1);\n            localStorageSet(STORAGE_KEY.FILES, JSON.stringify(state.files)).catch(console.error);\n        },\n        modifyFilter: (state, { payload }: PayloadAction<{ index: number, update: Filter }>) => {\n            state.permanentFilter[payload.index] = cleanFilter(payload.update);\n            localStorageSet(STORAGE_KEY.FILTERS, JSON.stringify(state.permanentFilter)).catch(console.error);\n        },\n        deleteFilter: (state, { payload }: PayloadAction<number>) => {\n            state.permanentFilter.splice(payload, 1);\n        },\n        setUsingPermanentFilter: (state, { payload }: PayloadAction<boolean>) => {\n            state.usingPermanentFilter = payload;\n        },\n        setFileFilter: (state, { payload }: PayloadAction<string>) => {\n            state.fileFilter = payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(loadFile.fulfilled, (state, { payload }) => {\n            state.files.push(payload);\n            localStorageSet(STORAGE_KEY.FILES, JSON.stringify(state.files)).catch(console.error);\n        });\n        builder.addCase(loadFile.rejected, (state, { error }) => {\n            console.error(error);\n            setSnackbarMessage(state, 'Failed to load your file', 'error');\n        });\n        builder.addCase(loadApp.fulfilled, (state, { payload }) => {\n            state.loaded = true;\n            state.files = payload.files;\n            state.permanentFilter = payload.filters;\n        });\n        builder.addCase(loadApp.rejected, (state, { error }) => {\n            console.error(error);\n            state.loaded = true;\n            setSnackbarMessage(state, 'Failed to load the application', 'error');\n        });\n    },\n});\n\nexport const {\n    addFilter,\n    setSearch,\n    modifyFilter,\n    deleteFilter,\n    deleteFile,\n    setGroupNameFilter,\n    setFileFilter,\n    snackBarMessagePublished,\n    snackbarVisibillityChanged,\n    setUsingPermanentFilter,\n} = appSlice.actions;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSnackbar } from 'store/selector/app';\nimport { Alert } from '@material-ui/lab';\nimport { snackbarVisibillityChanged } from 'store/reducer';\nimport { Snackbar as MaterialUiSnackbar } from '@material-ui/core';\n\nexport const Snackbar = () => {\n    const { open, message, severity } = useSelector(selectSnackbar);\n    const dispatch = useDispatch();\n    const onClose = useCallback(() => {\n        dispatch(snackbarVisibillityChanged(false));\n    }, [dispatch]);\n    return (\n        <MaterialUiSnackbar open={open} autoHideDuration={6000} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {message}\n            </Alert>\n        </MaterialUiSnackbar>\n    );\n};\n","import React from 'react';\nimport { Header } from './Header';\nimport style from './layout.module.css';\nimport { Snackbar } from './Snackbar';\n\nexport const Layout: React.FC = ({ children }) => {\n    return (\n        <div className={style.container}>\n            <div className={style.header}>\n                <Header />\n            </div>\n            <div className={style.bodyContainer}>\n                <div className={style.contentContainer}>{children}</div>\n            </div>\n            <Snackbar />\n        </div>\n    );\n};\n","import { Card, IconButton } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch } from 'react-redux';\nimport { snackBarMessagePublished, deleteFile } from 'store/reducer';\nimport { localStoageGet } from 'services/utils';\nimport { File } from 'types';\nimport fileDownload from 'js-file-download';\nimport style from './index.module.css';\n\ninterface FileComponentProps {\n    file: File\n}\n\nexport const FileComponent = ({ file }: FileComponentProps) => {\n    const dispatch = useDispatch();\n    const onDownload = useCallback(async () => {\n        try {\n            const data = await localStoageGet(file.savedPath);\n            if (!data) {\n                throw new Error('Could not find file data');\n            }\n            fileDownload(data, file.name);\n        } catch (e) {\n            dispatch(snackBarMessagePublished({\n                message: 'Failed to download file',\n                severity: 'error',\n            }));\n        }\n    }, [dispatch, file])\n    const onDelete = useCallback(() => {\n        dispatch(deleteFile(file));\n    }, [dispatch, file]);\n    return (\n        <Card className={style.fileCard}>\n            <span>\n                {file.name}\n            </span>\n            <IconButton onClick={onDownload}>\n                <DownloadIcon />\n            </IconButton>\n            <IconButton onClick={onDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </Card>\n    )\n}","import { Button } from '@material-ui/core';\nimport React, { ChangeEvent, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loadFile, snackBarMessagePublished } from 'store/reducer';\nimport style from './index.module.css';\n\nexport const FileUploader = () => {\n    const dispatch = useDispatch();\n    const onFileChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        if (!e.target.files || !e.target.files[0]) {\n            return;\n        }\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onloadend = () => {\n            const content = reader.result as string;\n            if (!content) {\n                dispatch(snackBarMessagePublished({ message: 'Failed to load file', severity: 'error' }));\n                return;\n            }\n            dispatch(loadFile({ name: file.name, data: content }))\n        };\n    }, [dispatch]);\n\n    return <div>\n        <input type='file' name='file' onChange={onFileChange} accept='.m3u' id=\"contained-button-file\" className={style.fileUploadInput} />\n        <label htmlFor=\"contained-button-file\">\n            <Button variant='contained' color='primary' component=\"span\">\n                Upload File\n            </Button>\n        </label>\n    </div>\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllFiles } from 'store/selector/entrys';\nimport { FileComponent } from './FileComponent';\nimport { FileUploader } from './FileUploader';\nimport style from './index.module.css'\n\nexport const Files = () => {\n    const files = useSelector(selectAllFiles);\n    return <div>\n        <div className={style.filesContainer}>\n        {files.map(file => <FileComponent key={file.id} file={file} />)}\n        </div>\n        <FileUploader />\n    </div>\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { selectAppIsLoaded } from 'store/selector/app';\n\nfunction PrivateRoute({ ...other }) {\n    const loaded = useSelector(selectAppIsLoaded);\n\n    if (!loaded) {\n        return <CircularProgress />;\n    }\n\n    return <Route {...other} />;\n}\n\nexport default PrivateRoute;\n","import React from 'react';\n\ninterface DisplayIfProps {\n    expr: boolean;\n    onElse?: JSX.Element;\n}\n\nexport const DisplayIf: React.FC<DisplayIfProps> = ({ children, expr, onElse }) => {\n    if (expr) {\n        return <>{children}</>;\n    }\n    if (onElse) {\n        return onElse;\n    }\n    return null;\n};\n","import { Card, Typography } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Entry } from 'types';\nimport style from './entry.module.css';\nimport { snackBarMessagePublished, snackbarVisibillityChanged } from 'store/reducer'\nimport { selectAllFiles, selectFileFilter } from 'store/selector/entrys';\nimport { DisplayIf } from 'comonents/DisplayIf';\nimport copy from 'copy-to-clipboard';\n\ninterface EntryComponentProps {\n    entry: Entry;\n}\n\nexport const EntryComponent = ({ entry }: EntryComponentProps) => {\n    const dispatch = useDispatch();\n    const fileFilter = useSelector(selectFileFilter);\n    const files = useSelector(selectAllFiles);\n    const shouldDisplayFile = fileFilter.length === 0 && files.length > 1;\n    const onClick = useCallback(() => {\n        const success = copy(entry.url);\n        dispatch(snackbarVisibillityChanged(false));\n        setTimeout(() => {\n            dispatch(snackBarMessagePublished({\n                message: success ? `Link Copied - ${entry.name}` : 'Failed to copy link',\n                severity: success ? 'success' : 'error',\n            }));\n        }, 0);\n    }, [entry, dispatch]);\n    return (\n        <Card className={style.container} onClick={onClick}>\n            <Typography variant=\"h6\">{entry.name}</Typography>\n            <Typography>{entry.groupName}</Typography>\n            <DisplayIf expr={shouldDisplayFile}>\n                <Typography variant=\"caption\">{entry.fileName}</Typography>\n            </DisplayIf>\n            <div className={style.imageContainer}>\n                <img src={entry.logo} className={style.image} />\n            </div>\n\n        </Card>\n    );\n};\n","import React from 'react';\nimport { Entry } from 'types';\nimport { EntryComponent } from './EntryComponent';\nimport style from './entrys.module.css'\n\nexport interface EntrysProps {\n    entrys: Entry[];\n}\n\nexport const Entrys = ({ entrys }: EntrysProps) => {\n    return (\n        <div className={style.container}>\n            {entrys.map((entry) => <div key={entry.url} className={style.item}>\n                <EntryComponent key={entry.url} entry={entry} />\n            </div>)}\n        </div>\n    );\n};\n","import React, { ChangeEvent, useCallback } from 'react';\nimport { FormControlLabel, InputAdornment, makeStyles, Switch, TextField } from '@material-ui/core';\nimport { SearchOutlined } from '@material-ui/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearch, setGroupNameFilter, setUsingPermanentFilter, setFileFilter } from 'store/reducer';\nimport { Autocomplete } from '@material-ui/lab';\nimport { selectAllFiles, selectGroups, selectUsingPermanentFilter } from 'store/selector/entrys';\nimport style from './index.module.css';\nimport { File } from 'types';\nimport cl from 'classnames';\n\nconst useClasses = makeStyles(() => ({\n    item: {\n        padding: '0 10px',\n    }\n}));\n\nexport const QuickFilter = () => {\n    const classes = useClasses();\n    const dispatch = useDispatch();\n    const usingPermanentFilter = useSelector(selectUsingPermanentFilter);\n    const groups = useSelector(selectGroups);\n    const files = useSelector(selectAllFiles);\n    const onFileChange = useCallback((e: ChangeEvent<unknown>, newValue: File | null) => {\n        dispatch(setFileFilter(newValue ? newValue.name : ''));\n    }, [dispatch]);\n    const onSearchChanged = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(setSearch(e.target.value))\n    }, [dispatch]);\n    const onGroupNameChange = useCallback((e: ChangeEvent<unknown>, newValue: string | null) => {\n        dispatch(setGroupNameFilter(newValue || ''));\n    }, [dispatch]);\n    const toogleUsePermanentFilter = useCallback(() => {\n        dispatch(setUsingPermanentFilter(!usingPermanentFilter));\n    }, [dispatch, usingPermanentFilter]);\n    return (\n        <div className={style.container}>\n                <TextField\n                    className={cl(classes.item, style.item)}\n                    placeholder=\"Search...\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">\n                            <SearchOutlined />\n                        </InputAdornment>\n                    }}\n                    onChange={onSearchChanged}\n                />\n            <Autocomplete\n                className={style.item}\n                options={groups}\n                onChange={onGroupNameChange}\n                renderInput={(params) => <TextField {...params} label=\"Group\" />}\n            />\n            <Autocomplete\n                className={style.item}\n                options={files}\n                onChange={onFileChange}\n                getOptionLabel={file => file.name}\n                renderInput={(params) => <TextField {...params} label=\"File\" />}\n            />\n            <FormControlLabel\n                label='Use filters'\n                labelPlacement='start'\n                control={<Switch checked={usingPermanentFilter} onChange={toogleUsePermanentFilter} />}\n            />\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectEntry } from 'store/selector/entrys';\nimport { Entrys } from './Entrys';\nimport { NavigateBefore, NavigateNext } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport { QuickFilter } from './QuickFilter/QuickFilter';\n\nconst MAX_PER_PAGE = 100;\n\nexport const EntrysPage = () => {\n    const [pageNb, setPageNb] = useState(0);\n    const entrys = useSelector(selectEntry);\n    const maxPages = Math.floor(entrys.length / MAX_PER_PAGE);\n    return (\n        <div>\n            <QuickFilter />\n            <Entrys entrys={entrys.slice(pageNb * MAX_PER_PAGE, pageNb * MAX_PER_PAGE + MAX_PER_PAGE)} />\n            <div>\n                <IconButton onClick={() => setPageNb(pageNb - 1)} disabled={pageNb === 0}>\n                    <NavigateBefore />\n                </IconButton>\n                <span>\n                    {pageNb + 1}/{maxPages + 1}\n                </span>\n                <IconButton onClick={() => setPageNb(pageNb + 1)} disabled={maxPages === pageNb} >\n                    <NavigateNext />\n                </IconButton>\n            </div>\n        </div>\n    );\n};\n","import { IconButton, InputAdornment, makeStyles, TextField } from '@material-ui/core';\nimport React, { useCallback, useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/HighlightOff';\nimport { useDispatch } from 'react-redux';\nimport { snackBarMessagePublished } from 'store/reducer';\nimport style from './index.module.css';\nimport cx from 'classnames';\n\ninterface WordsInputProps {\n    onChange: (newWords: string[]) => void\n    words: string[]\n    placeholder: string\n    positive?: boolean\n    negative?: boolean\n}\n\nconst useStyleOverride = makeStyles(() => ({\n    deleteIcon: {\n        padding: '5px',\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n        minWidth: '300px'\n    },\n    inputInput: { width: '0px', minWidth: '140px', flexGrow: 1 },\n}))\n\nexport const WordsInput = ({ words, onChange, placeholder, positive, negative }: WordsInputProps) => {\n    const dispatch = useDispatch();\n    const styleOverride = useStyleOverride();\n    const [input, setInput] = useState<string>('');\n\n    const onWordAdded = useCallback(() => {\n        if (input.length === 0) {\n            return;\n        }\n        if (words.includes(input)) {\n            dispatch(snackBarMessagePublished({\n                message: 'This word is already in the list',\n                severity: 'info',\n            }));\n            return;\n        }\n        onChange([...words, input]);\n        setInput('');\n    }, [input, words, setInput, dispatch]);\n\n    const onWordDelete = useCallback((word: string) => {\n        onChange(words.filter(w => w !== word));\n    }, [onChange, words]);\n\n    return (\n        <div className={style.container}>\n            <TextField\n                variant='outlined'\n                label={placeholder}\n                placeholder={words.length > 0 ? placeholder : undefined}\n                value={input}\n                onChange={e => setInput(e.target.value)}\n                InputProps={{\n                    classes: { root: styleOverride.inputRoot, input: styleOverride.inputInput },\n                    startAdornment: words.length > 0 ?\n                        <>\n                            {words.map(word => (\n                                <div\n                                    key={word}\n                                    className={cx({\n                                        [style.word]: true,\n                                        [style.positiveWord]: positive,\n                                        [style.negativeWord]: negative,\n                                    })}\n                                >\n                                    <span>\n                                        {word}\n                                    </span>\n                                    <IconButton onClick={() => onWordDelete(word)} className={styleOverride.deleteIcon}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </div>\n                            ))}\n                        </> : undefined,\n                    endAdornment: <InputAdornment position='end'>\n                        <IconButton onClick={onWordAdded}>\n                            <AddIcon />\n                        </IconButton>\n                    </InputAdornment>\n                }}\n            />\n\n        </div>\n    )\n};\n","import { Card, IconButton, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllGroups } from 'store/selector/entrys';\nimport { Filter } from 'types';\nimport style from './index.module.css'\nimport { WordsInput } from './WordsInput/WordsInput';\nimport { modifyFilter, deleteFilter } from 'store/reducer';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport interface FilterComponentProps {\n    filter: Filter\n    index: number\n}\n\nexport const FilterComponent = ({ filter, index }: FilterComponentProps) => {\n    const groups = useSelector(selectAllGroups);\n    const dispatch = useDispatch();\n    const onExcludeListChange = (excludeKeywords: string[]) => {\n        dispatch(modifyFilter({\n            index,\n            update: { ...filter, excludeKeywords },\n        }));\n    };\n    const onIncludeListChange = (includeKeywords: string[]) => {\n        dispatch(modifyFilter({\n            index,\n            update: { ...filter, includeKeywords },\n        }));\n    }\n    const onGroupNameChange = (groupName: string | null) => {\n        dispatch(modifyFilter({\n            index,\n            update: { ...filter, groupName: groupName ? groupName : undefined },\n        }));\n    }\n    const onDelete = () => {\n        dispatch(deleteFilter(index));\n    }\n    return (\n        <Card className={style.filterCard}>\n            <WordsInput\n                positive\n                words={filter.includeKeywords || []}\n                onChange={onIncludeListChange}\n                placeholder='Include Keyword'\n            />\n            <WordsInput\n                negative\n                words={filter.excludeKeywords || []}\n                onChange={onExcludeListChange}\n                placeholder='Exclude keyword'\n            />\n            <Autocomplete\n                onChange={(_, value) => onGroupNameChange(value)}\n                defaultValue={filter.groupName}\n                className={style.groupFilter}\n                options={groups}\n                renderInput={(params) => <TextField {...params} variant='outlined' label=\"Group Filter (All by default)\" />}\n            />\n            <IconButton onClick={onDelete}>\n                <DeleteIcon />\n            </IconButton>\n        </Card>\n    )\n}","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'store/reducer';\nimport { selectPemanentFilter } from 'store/selector/entrys';\nimport { FilterComponent } from './FilterComponent';\nimport style from './index.module.css'\n\nexport const FiltersPage = () => {\n    const dispatch = useDispatch();\n    const filters = useSelector(selectPemanentFilter);\n    return (\n        <div>\n            <div className={style.cardsContainer}>\n                {filters.map((filter, idx) => <FilterComponent index={idx} key={idx} filter={filter} />)}\n            </div>\n            <Button onClick={() => dispatch(addFilter({}))} variant='contained' color='primary' >\n                Add Filter\n            </Button>\n        </div>\n    )\n};\n","import React, { useEffect } from 'react';\nimport { Layout } from './comonents/Layout/Layout';\nimport { Switch } from 'react-router-dom';\nimport { urls } from 'services/urls';\nimport { Files } from 'scenes/Files/Files';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAppIsLoaded } from 'store/selector/app';\nimport { loadApp } from 'store/reducer';\nimport PrivateRoute from 'comonents/PrivateRoute';\nimport { EntrysPage } from 'scenes/Entrys/EntrysPage';\nimport { FiltersPage } from 'scenes/Filters/FiltersPage';\n\nfunction App() {\n    const loaded = useSelector(selectAppIsLoaded);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!loaded) {\n            dispatch(loadApp());\n        }\n    }, [loaded]);\n    return (\n        <Layout>\n            <Switch>\n                <PrivateRoute path={urls.files} component={Files} />\n                <PrivateRoute path={urls.filters} component={FiltersPage} />\n                <PrivateRoute path={urls.home} component={EntrysPage} />\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { combineReducers, createStore, applyMiddleware } from '@reduxjs/toolkit';\nimport { appSlice } from './reducer';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    app: appSlice.reducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileUploadInput\":\"Files_fileUploadInput__16_FC\",\"fileCard\":\"Files_fileCard__mxHpM\",\"filesContainer\":\"Files_filesContainer__1bFZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterCard\":\"Filters_filterCard__2Ihof\",\"cardsContainer\":\"Filters_cardsContainer__3RLqi\",\"groupFilter\":\"Filters_groupFilter__1kSlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout_container__3bi5Z\",\"header\":\"layout_header__35Um9\",\"bodyContainer\":\"layout_bodyContainer__Fq1ii\",\"contentContainer\":\"layout_contentContainer__14EXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuickFilter_container__38zRh\",\"item\":\"QuickFilter_item__1hdzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordsInput_container__hPZ_6\",\"word\":\"WordsInput_word__3kGcd\",\"positiveWord\":\"WordsInput_positiveWord__2dsMo\",\"negativeWord\":\"WordsInput_negativeWord__17LBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"entry_container__2wNOg\",\"rowContainer\":\"entry_rowContainer__3bdrh\",\"fileContainer\":\"entry_fileContainer__2Jra1\",\"image\":\"entry_image__2lK1p\",\"imageContainer\":\"entry_imageContainer__3972N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"entrys_container__3wrUf\",\"item\":\"entrys_item__2Vl1j\"};"],"sourceRoot":""}