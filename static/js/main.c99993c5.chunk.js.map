{"version":3,"sources":["services/urls.ts","comonents/Layout/Header.tsx","store/selector/app.tsx","services/constants.ts","store/selector/entrys.tsx","services/utils.ts","store/reducer/thunks.ts","store/reducer/reducer.tsx","comonents/Layout/Snackbar.tsx","comonents/Layout/Layout.tsx","scenes/Files/FileComponent.tsx","scenes/Files/FileUploader.tsx","scenes/Files/Files.tsx","comonents/PrivateRoute.tsx","comonents/DisplayIf.tsx","scenes/Entrys/EntryComponent.tsx","scenes/Entrys/Entrys.tsx","scenes/Entrys/QuickFilter/QuickFilter.tsx","scenes/Entrys/EntrysPage.tsx","scenes/Filters/WordsInput/WordsInput.tsx","scenes/Filters/FilterComponent.tsx","scenes/Filters/FiltersPage.tsx","App.tsx","serviceWorker.ts","store/store.ts","index.tsx","scenes/Files/index.module.css","scenes/Filters/index.module.css","comonents/Layout/layout.module.css","scenes/Entrys/QuickFilter/index.module.css","scenes/Filters/WordsInput/index.module.css","scenes/Entrys/entry.module.css","scenes/Entrys/entrys.module.css"],"names":["urls","useStyle","makeStyles","listIcon","color","minWidth","paddingRight","title","Header","overrideStyle","history","useHistory","navigationItems","url","icon","text","FilterList","Description","AppBar","position","Toolbar","Typography","variant","className","map","item","onClick","push","MenuItem","ListItemIcon","ListItemText","primary","selectAppState","state","app","selectAppIsLoaded","createSelector","loaded","selectSnackbar","snakbar","STORAGE_KEY","selectFileFilter","fileFilter","selectAllFiles","files","selectFiles","length","file","find","name","selectPemanentFilter","permanentFilter","selectUsingPermanentFilter","usingPermanentFilter","selectSearch","search","selectGroupFilter","groupFilter","selectTemporaryFilter","groupName","filters","includeKeywords","split","selectFilters","temporaryFilter","selectAllGroups","Object","keys","reduce","result","entrys","forEach","entry","selectEntry","filterWithGroupName","filter","filterWithoutGroupName","globalExclude","excludeKeywords","globalInclude","entryName","toLowerCase","f","every","word","includes","some","filterEntrys","selectGroups","localStorageSet","key","data","set","localStoageGet","get","loadFile","createAsyncThunk","thunkAPI","a","parse","savePath","getState","i","savedPath","catch","console","error","id","items","group","fileName","logo","tvg","language","contry","country","loadApp","JSON","setSnackbarMessage","message","severity","open","cleanFilter","w","appSlice","createSlice","initialState","reducers","snackbarVisibillityChanged","action","payload","snackBarMessagePublished","addFilter","stringify","setSearch","setGroupNameFilter","deleteFile","index","findIndex","splice","modifyFilter","update","deleteFilter","setUsingPermanentFilter","setFileFilter","extraReducers","builder","addCase","fulfilled","rejected","actions","Snackbar","useSelector","dispatch","useDispatch","onClose","useCallback","autoHideDuration","Alert","Layout","children","style","container","header","bodyContainer","contentContainer","FileComponent","onDownload","Error","fileDownload","onDelete","Card","fileCard","IconButton","FileUploader","onFileChange","e","target","reader","FileReader","readAsText","onloadend","content","type","onChange","accept","fileUploadInput","htmlFor","Button","component","Files","filesContainer","PrivateRoute","other","CircularProgress","DisplayIf","expr","onElse","EntryComponent","shouldDisplayFile","success","copy","setTimeout","imageContainer","src","image","Entrys","useClasses","padding","QuickFilter","classes","groups","newValue","onSearchChanged","value","onGroupNameChange","toogleUsePermanentFilter","TextField","cl","placeholder","InputProps","startAdornment","InputAdornment","SearchOutlined","Autocomplete","options","renderInput","params","label","getOptionLabel","FormControlLabel","labelPlacement","control","Switch","checked","MAX_PER_PAGE","EntrysPage","useState","pageNb","setPageNb","maxPages","Math","floor","slice","disabled","NavigateBefore","NavigateNext","useStyleOverride","deleteIcon","inputRoot","flexWrap","inputInput","width","flexGrow","WordsInput","words","positive","negative","styleOverride","input","setInput","onWordAdded","onWordDelete","undefined","root","cx","positiveWord","negativeWord","endAdornment","FilterComponent","filterCard","_","defaultValue","FiltersPage","cardsContainer","idx","App","useEffect","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"8QAAaA,EACH,IADGA,EAEA,WAFAA,EAGF,S,eCYLC,EAAWC,YAAW,CACxBC,SAAU,CACNC,MAAO,QACPC,SAAU,MACVC,aAAc,QAElBC,MAAO,CACHD,aAAc,UAITE,EAAS,WAClB,IAAMC,EAAgBR,IAChBS,EAAUC,cACVC,EAAkB,CACpB,CACIC,IAAKb,EACLc,KAAM,cAAC,IAAD,IACNC,KAAM,YAEV,CACIF,IAAKb,EACLc,KAAM,cAACE,EAAA,EAAD,IACND,KAAM,WAEV,CACIF,IAAKb,EACLc,KAAM,cAACG,EAAA,EAAD,IACNF,KAAM,UAId,OACI,cAACG,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWd,EAAcF,MAAlD,6BACCK,EAAgBY,KAAI,SAACC,GAAD,OACjB,qBAAqBC,QAAS,kBAAMhB,EAAQiB,KAAKF,EAAKZ,MAAtD,SACI,eAACe,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAcN,UAAWd,EAAcN,SAAvC,SAAkDsB,EAAKX,OACvD,cAACgB,EAAA,EAAD,CAAcC,QAASN,EAAKV,WAH1BU,EAAKV,e,gCCjDtBiB,EAAiB,SAACC,GAAD,OAAsBA,EAAMC,KAE7CC,EAAoBC,YAAeJ,GAAgB,SAACE,GAAD,OAASA,EAAIG,UAEhEC,EAAiBF,YAAeJ,GAAgB,SAACE,GAAD,OAASA,EAAIK,W,2DCP7DC,EACF,QADEA,EAEA,U,QCEAC,EAAmBL,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMS,cACjEC,EAAiBP,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMW,SAC/DC,EAAcT,YACvBO,EACAF,GACA,SAACG,EAAOF,GACJ,IAAKA,GAAoC,IAAtBA,EAAWI,OAC1B,OAAOF,EAEX,IAAMG,EAAOH,EAAMI,MAAK,SAAAD,GAAI,OAAIA,EAAKE,OAASP,KAC9C,OAAOK,EAAO,CAACA,GAAQ,MAIlBG,EAAuBd,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMkB,mBAErEC,EAA6BhB,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMoB,wBAE3EC,EAAelB,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMsB,UAC7DC,EAAoBpB,YAAeJ,GAAgB,SAAAC,GAAK,OAAIA,EAAMwB,eACzEC,EAAwBtB,YAC1BoB,EACAF,GACA,SAACK,EAAWJ,GACR,IAAMK,EAAoB,GAO1B,OANIL,EAAOT,OAAS,GAChBc,EAAQjC,KAAK,CAAEkC,gBAAiBN,EAAOO,MAAM,OAE7CH,EAAUb,OAAS,GACnBc,EAAQjC,KAAK,CAAEgC,cAEZC,KAIFG,EAAgB3B,YACzBc,EACAQ,EACAN,GACA,SAACD,EAAiBa,EAAiBX,GAAnC,OACIA,EAAoB,sBAAOF,GAAP,YAA2Ba,IAAmBA,KAG7DC,EAAkB7B,YAC3BS,GACA,SAACD,GAAD,OAAqBsB,OAAOC,KAAKvB,EAAMwB,QAAgC,SAACC,EAAQtB,GAE5E,OADAA,EAAKuB,OAAOC,SAAQ,SAAAC,GAAK,OAAIH,EAAOG,EAAMb,YAAa,KAChDU,IACR,QA8CMI,EAAcrC,YAAeS,EAAakB,GACnD,SAACnB,EAAOgB,GACJ,OAAOhB,EAAMwB,QAAgB,SAACC,EAAQtB,GAAT,4BACtBsB,GADsB,YA7ChB,SAACC,EAAiBV,GACnC,IAAMc,EAAsBd,EAAQe,QAAO,SAAAA,GAAM,OAAIA,EAAOhB,aACtDiB,EAAyBhB,EAAQe,QAAO,SAAAA,GAAM,OAAKA,EAAOhB,aAE1DkB,EAAgBD,EAAuBR,QAAiB,SAACC,EAAQM,GACnE,OAAKA,EAAOG,gBAGN,GAAN,mBAAWT,GAAX,YAAsBM,EAAOG,kBAFlBT,IAGZ,IACGU,EAAgBH,EAAuBR,QAAiB,SAACC,EAAQM,GACnE,OAAKA,EAAOd,gBAGN,GAAN,mBAAWQ,GAAX,YAAsBM,EAAOd,kBAFlBQ,IAGZ,IAEH,OAAOC,EAAOK,QAAQ,SAAAH,GAClB,IAAMQ,EAAYR,EAAMvB,KAAKgC,cAC7B,GAAIP,EAAoB5B,OAAS,EAAG,CAChC,IAAM6B,EAASD,EAAoB1B,MAAK,SAAAkC,GAAC,OAAIA,EAAEvB,YAAca,EAAMb,aACnE,IAAKgB,EACD,OAAO,EAEX,GAAIA,EAAOd,iBAAmBc,EAAOd,gBAAgBf,OAAS,IACzD6B,EAAOd,gBAAgBsB,OAAM,SAAAC,GAAI,OAAIJ,EAAUK,SAASD,MAEzD,OAAO,EAEX,GAAIT,EAAOG,iBAAmBH,EAAOG,gBAAgBQ,MAAK,SAAAF,GAAI,OAAIJ,EAAUK,SAASD,MACjF,OAAO,EAGf,QAAIL,EAAcjC,OAAS,IAAMiC,EAAcI,OAAM,SAAAC,GAAI,OAAIJ,EAAUK,SAASD,SAG5EP,EAAcS,MAAK,SAAAF,GAAI,OAAIJ,EAAUK,SAASD,SAW3CG,CAAaxC,EAAKuB,OAAQV,OAC9B,OAIE4B,EAAepD,YACxBqC,GACA,SAACH,GAAD,OAAYJ,OAAOC,KAAKG,EAAOF,QAAgC,SAACC,EAAQG,GAEpE,OADAH,EAAOG,EAAMb,YAAa,EACnBU,IACR,Q,SC3GMoB,GAAkB,SAACC,EAAaC,GACzC,OAAOC,aAAIF,EAAKC,IAGPE,GAAiB,SAACH,GAC3B,OAAOI,aAAIJ,ICFFK,GAAWC,YAAiB,aAAD,uCAAe,aAAuDC,GAAvD,yBAAAC,EAAA,sDAASjD,EAAT,EAASA,KAAM0C,EAAf,EAAeA,KAC5D5C,EAAOoD,gBAAMR,GACfS,EAA0B,KACxBxD,EAAQD,EAAesD,EAASI,YAC7BC,EAAI,EAJsC,UAK/CF,EAAQ,eAAWnD,GAAX,OAAkBqD,GACrB1D,EAAM0C,MAAK,SAAAJ,GAAC,OAAIA,EAAEqB,YAAcH,KANU,mDAIjCE,IAJiC,8BAUnDb,GAAgBW,EAAUT,GAAMa,MAAMC,QAAQC,OAVK,kBAW5C,CACHC,GAAIP,EACJnD,OACAsD,UAAWH,EACX9B,OAAQvB,EAAK6D,MAAMpF,KAAI,SAAAC,GAAI,MAAK,CAC5BkC,UAAWlC,EAAKoF,MAAMtG,MACtBuG,SAAU7D,EACV8D,KAAMtF,EAAKuF,IAAID,KACfE,SAAUxF,EAAKuF,IAAIC,SACnBhE,KAAMxB,EAAKwB,KACXpC,IAAKY,EAAKZ,IACVqG,OAAQzF,EAAKuF,IAAIG,cAtB0B,4CAAf,yDA2B3BC,GAAUpB,YAAiB,OAAD,sBAAS,8BAAAE,EAAA,sEACxBL,GAAerD,GADS,cACtCI,EADsC,gBAEtBiD,GAAerD,GAFO,cAEtCoB,EAFsC,yBAGrC,CACHhB,MAAOA,EAAQyE,KAAKlB,MAAMvD,GAAmB,GAC7CgB,QAASA,EAAUyD,KAAKlB,MAAMvC,GAAuB,KALb,4CCA1C0D,GAAqB,SAACrF,EAAsBsF,EAAiBC,GAC/DvF,EAAMM,QAAN,2BACON,EAAMM,SADb,IAEIkF,MAAM,EACNF,UACAC,cAIFE,GAAc,SAAC,GAAD,IAAG5C,EAAH,EAAGA,gBAAiBjB,EAApB,EAAoBA,gBAAiBF,EAArC,EAAqCA,UAArC,MAAsE,CACtFmB,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiBtD,KAAI,SAAAmG,GAAC,OAAIA,EAAE1C,iBAC7CpB,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiBrC,KAAI,SAAAmG,GAAC,OAAIA,EAAE1C,iBAC7CtB,cAGSiE,GAAWC,YAAY,CAChC5E,KAAM,MACN6E,aA9BgC,CAChCzF,QAAQ,EACRK,WAAY,GACZa,OAAQ,GACRF,sBAAsB,EACtBI,YAAa,GACbN,gBAAiB,GACjBP,MAAO,GACPL,QAAS,CACLkF,MAAM,IAsBVM,SAAU,CACNC,2BAA4B,SAAC/F,EAAOgG,GAChChG,EAAMM,QAAQkF,KAAOQ,EAAOC,SAEhCC,yBAA0B,SACtBlG,EACAgG,GAEAX,GAAmBrF,EAAOgG,EAAOC,QAAQX,QAASU,EAAOC,QAAQV,WAErEY,UAAW,SAACnG,EAAD,GAAgD,IAAtCiG,EAAqC,EAArCA,QACjBjG,EAAMkB,gBAAgBxB,KAAK+F,GAAYQ,IACvCzC,GAAgBjD,EAAqB6E,KAAKgB,UAAUpG,EAAMkB,kBAAkBqD,MAAMC,QAAQC,QAE9F4B,UAAW,SAACrG,EAAD,GAAgD,IAAtCiG,EAAqC,EAArCA,QACjBjG,EAAMsB,OAAS2E,EAAQjD,eAE3BsD,mBAAoB,SAACtG,EAAD,GAAgD,IAAtCiG,EAAqC,EAArCA,QAC1BjG,EAAMwB,YAAcyE,GAExBM,WAAY,SAACvG,EAAD,GAA8C,IAApCiG,EAAmC,EAAnCA,QACZO,EAAQxG,EAAMW,MAAM8F,WAAU,SAAA3F,GAAI,OAAIA,EAAK4D,KAAOuB,EAAQvB,OACjD,IAAX8B,GAIJxG,EAAMW,MAAM+F,OAAOF,EAAO,GAC1BhD,GAAgBjD,EAAmB6E,KAAKgB,UAAUpG,EAAMW,QAAQ4D,MAAMC,QAAQC,QAJ1EY,GAAmBrF,EAAO,wBAAyB,UAM3D2G,aAAc,SAAC3G,EAAD,GAA2E,IAAjEiG,EAAgE,EAAhEA,QACpBjG,EAAMkB,gBAAgB+E,EAAQO,OAASf,GAAYQ,EAAQW,QAC3DpD,GAAgBjD,EAAqB6E,KAAKgB,UAAUpG,EAAMkB,kBAAkBqD,MAAMC,QAAQC,QAE9FoC,aAAc,SAAC7G,EAAD,GAAgD,IAAtCiG,EAAqC,EAArCA,QACpBjG,EAAMkB,gBAAgBwF,OAAOT,EAAS,IAE1Ca,wBAAyB,SAAC9G,EAAD,GAAiD,IAAvCiG,EAAsC,EAAtCA,QAC/BjG,EAAMoB,qBAAuB6E,GAEjCc,cAAe,SAAC/G,EAAD,GAAgD,IAAtCiG,EAAqC,EAArCA,QACrBjG,EAAMS,WAAawF,IAG3Be,cAAe,SAACC,GACZA,EAAQC,QAAQpD,GAASqD,WAAW,SAACnH,EAAD,GAAyB,IAAfiG,EAAc,EAAdA,QAC1CjG,EAAMW,MAAMjB,KAAKuG,GACjBzC,GAAgBjD,EAAmB6E,KAAKgB,UAAUpG,EAAMW,QAAQ4D,MAAMC,QAAQC,UAElFwC,EAAQC,QAAQpD,GAASsD,UAAU,SAACpH,EAAD,GAAuB,IAAbyE,EAAY,EAAZA,MACzCD,QAAQC,MAAMA,GACdY,GAAmBrF,EAAO,2BAA4B,YAE1DiH,EAAQC,QAAQ/B,GAAQgC,WAAW,SAACnH,EAAD,GAAyB,IAAfiG,EAAc,EAAdA,QACzCjG,EAAMI,QAAS,EACfJ,EAAMW,MAAQsF,EAAQtF,MACtBX,EAAMkB,gBAAkB+E,EAAQtE,WAEpCsF,EAAQC,QAAQ/B,GAAQiC,UAAU,SAACpH,EAAD,GAAuB,IAAbyE,EAAY,EAAZA,MACxCD,QAAQC,MAAMA,GACdzE,EAAMI,QAAS,EACfiF,GAAmBrF,EAAO,iCAAkC,e,GAgBpE2F,GAAS0B,QAVTlB,G,GAAAA,UACAE,G,GAAAA,UACAM,G,GAAAA,aACAE,G,GAAAA,aACAN,G,GAAAA,WACAD,G,GAAAA,mBACAS,G,GAAAA,cACAb,G,GAAAA,yBACAH,G,GAAAA,2BACAe,G,GAAAA,wB,UCzHSQ,GAAW,WAAO,IAAD,EACUC,YAAYlH,GAAxCmF,EADkB,EAClBA,KAAMF,EADY,EACZA,QAASC,EADG,EACHA,SACjBiC,EAAWC,cACXC,EAAUC,uBAAY,WACxBH,EAASzB,IAA2B,MACrC,CAACyB,IACJ,OACI,cAAC,KAAD,CAAoBhC,KAAMA,EAAMoC,iBAAkB,IAAMF,QAASA,EAAjE,SACI,cAACG,EAAA,EAAD,CAAOH,QAASA,EAASnC,SAAUA,EAAnC,SACKD,OCXJwC,GAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,OACI,sBAAKzI,UAAW0I,IAAMC,UAAtB,UACI,qBAAK3I,UAAW0I,IAAME,OAAtB,SACI,cAAC,EAAD,MAEJ,qBAAK5I,UAAW0I,IAAMG,cAAtB,SACI,qBAAK7I,UAAW0I,IAAMI,iBAAtB,SAAyCL,MAE7C,cAAC,GAAD,Q,sGCCCM,GAAgB,SAAC,GAAkC,IAAhCvH,EAA+B,EAA/BA,KACtB0G,EAAWC,cACXa,EAAaX,sBAAW,sBAAC,4BAAA1D,EAAA,+EAEJL,GAAe9C,EAAKwD,WAFhB,UAEjBZ,EAFiB,6BAIb,IAAI6E,MAAM,4BAJG,OAMvBC,KAAa9E,EAAM5C,EAAKE,MAND,gDAQvBwG,EAAStB,GAAyB,CAC9BZ,QAAS,0BACTC,SAAU,WAVS,yDAa5B,CAACiC,EAAU1G,IACR2H,EAAWd,uBAAY,WACzBH,EAASjB,GAAWzF,MACrB,CAAC0G,EAAU1G,IACd,OACI,eAAC4H,GAAA,EAAD,CAAMpJ,UAAW0I,KAAMW,SAAvB,UACI,+BACK7H,EAAKE,OAEV,cAAC4H,GAAA,EAAD,CAAYnJ,QAAS6I,EAArB,SACI,cAAC,KAAD,MAEJ,cAACM,GAAA,EAAD,CAAYnJ,QAASgJ,EAArB,SACI,cAAC,KAAD,U,UCrCHI,GAAe,WACxB,IAAMrB,EAAWC,cACXqB,EAAenB,uBAAY,SAACoB,GAC9B,GAAKA,EAAEC,OAAOrI,OAAUoI,EAAEC,OAAOrI,MAAM,GAAvC,CAGA,IAAMG,EAAOiI,EAAEC,OAAOrI,MAAM,GACtBsI,EAAS,IAAIC,WACnBD,EAAOE,WAAWrI,GAClBmI,EAAOG,UAAY,WACf,IAAMC,EAAUJ,EAAO7G,OAKvBoF,EAJK6B,EAIIvF,GAAS,CAAE9C,KAAMF,EAAKE,KAAM0C,KAAM2F,IAH9BnD,GAAyB,CAAEZ,QAAS,sBAAuBC,SAAU,eAKvF,CAACiC,IAEJ,OAAO,gCACH,uBAAO8B,KAAK,OAAOtI,KAAK,OAAOuI,SAAUT,EAAcU,OAAO,OAAO9E,GAAG,wBAAwBpF,UAAW0I,KAAMyB,kBACjH,uBAAOC,QAAQ,wBAAf,SACI,cAACC,GAAA,EAAD,CAAQtK,QAAQ,YAAYlB,MAAM,UAAUyL,UAAU,OAAtD,+BCrBCC,GAAQ,WACjB,IAAMlJ,EAAQ4G,YAAY7G,GAC1B,OAAO,gCACH,qBAAKpB,UAAW0I,KAAM8B,eAAtB,SACCnJ,EAAMpB,KAAI,SAAAuB,GAAI,OAAI,cAAC,GAAD,CAA6BA,KAAMA,GAAfA,EAAK4D,SAE5C,cAAC,GAAD,Q,UCGOqF,OAVf,YAAqC,IAAVC,EAAS,oBAGhC,OAFezC,YAAYrH,GAMpB,cAAC,IAAD,eAAW8J,IAHP,cAACC,GAAA,EAAD,K,6BCHFC,GAAsC,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,SAAUoC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClE,OAAID,EACO,mCAAGpC,IAEVqC,GAGG,M,qBCAEC,GAAiB,SAAC,GAAoC,IAAlC9H,EAAiC,EAAjCA,MACvBiF,EAAWC,cACXhH,EAAa8G,YAAY/G,GACzBG,EAAQ4G,YAAY7G,GACpB4J,EAA0C,IAAtB7J,EAAWI,QAAgBF,EAAME,OAAS,EAC9DpB,EAAUkI,uBAAY,WACxB,IAAM4C,EAAUC,KAAKjI,EAAM3D,KAC3B4I,EAASzB,IAA2B,IACpC0E,YAAW,WACPjD,EAAStB,GAAyB,CAC9BZ,QAASiF,EAAO,wBAAoBhI,EAAMvB,MAAS,sBACnDuE,SAAUgF,EAAU,UAAY,aAErC,KACJ,CAAChI,EAAOiF,IACX,OACI,eAACkB,GAAA,EAAD,CAAMpJ,UAAW0I,KAAMC,UAAWxI,QAASA,EAA3C,UACI,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BkD,EAAMvB,OAChC,cAAC5B,EAAA,EAAD,UAAamD,EAAMb,YACnB,cAAC,GAAD,CAAWyI,KAAMG,EAAjB,SACI,cAAClL,EAAA,EAAD,CAAYC,QAAQ,UAApB,SAA+BkD,EAAMsC,aAEzC,qBAAKvF,UAAW0I,KAAM0C,eAAtB,SACI,qBAAKC,IAAKpI,EAAMuC,KAAMxF,UAAW0I,KAAM4C,c,oBC5B1CC,GAAS,SAAC,GAA6B,IAA3BxI,EAA0B,EAA1BA,OACrB,OACI,qBAAK/C,UAAW0I,KAAMC,UAAtB,SACK5F,EAAO9C,KAAI,SAACgD,GAAD,OAAW,qBAAqBjD,UAAW0I,KAAMxI,KAAtC,SACnB,cAAC,GAAD,CAAgC+C,MAAOA,GAAlBA,EAAM3D,MADE2D,EAAM3D,W,wHCD7CkM,GAAa7M,aAAW,iBAAO,CACjCuB,KAAM,CACFuL,QAAS,cAIJC,GAAc,WACvB,IAAMC,EAAUH,KACVtD,EAAWC,cACXrG,EAAuBmG,YAAYpG,GACnC+J,EAAS3D,YAAYhE,GACrB5C,EAAQ4G,YAAY7G,GACpBoI,EAAenB,uBAAY,SAACoB,EAAyBoC,GACvD3D,EAAST,GAAcoE,EAAWA,EAASnK,KAAO,OACnD,CAACwG,IACE4D,EAAkBzD,uBAAY,SAACoB,GACjCvB,EAASnB,GAAU0C,EAAEC,OAAOqC,UAC7B,CAAC7D,IACE8D,EAAoB3D,uBAAY,SAACoB,EAAyBoC,GAC5D3D,EAASlB,GAAmB6E,GAAY,OACzC,CAAC3D,IACE+D,EAA2B5D,uBAAY,WACzCH,EAASV,IAAyB1F,MACnC,CAACoG,EAAUpG,IACd,OACI,sBAAK9B,UAAW0I,KAAMC,UAAtB,UACQ,cAACuD,GAAA,EAAD,CACIlM,UAAWmM,KAAGR,EAAQzL,KAAMwI,KAAMxI,MAClCkM,YAAY,YACZC,WAAY,CACRC,eAAgB,cAACC,GAAA,EAAD,CAAgB3M,SAAS,QAAzB,SACZ,cAAC4M,GAAA,EAAD,OAGRvC,SAAU6B,IAElB,cAACW,GAAA,EAAD,CACIzM,UAAW0I,KAAMxI,KACjBwM,QAASd,EACT3B,SAAU+B,EACVW,YAAa,SAACC,GAAD,OAAY,cAACV,GAAA,EAAD,2BAAeU,GAAf,IAAuBC,MAAM,cAE1D,cAACJ,GAAA,EAAD,CACIzM,UAAW0I,KAAMxI,KACjBwM,QAASrL,EACT4I,SAAUT,EACVsD,eAAgB,SAAAtL,GAAI,OAAIA,EAAKE,MAC7BiL,YAAa,SAACC,GAAD,OAAY,cAACV,GAAA,EAAD,2BAAeU,GAAf,IAAuBC,MAAM,aAE1D,cAACE,GAAA,EAAD,CACIF,MAAM,cACNG,eAAe,QACfC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAASrL,EAAsBmI,SAAUgC,UCvDpEmB,GAAe,IAERC,GAAa,WAAO,IAAD,EACAC,mBAAS,GADT,oBACrBC,EADqB,KACbC,EADa,KAEtBzK,EAASkF,YAAY/E,GACrBuK,EAAWC,KAAKC,MAAM5K,EAAOxB,OAAS6L,IAC5C,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,CAAQrK,OAAQA,EAAO6K,MAAML,EAASH,GAAcG,EAASH,GAAeA,MAC5E,gCACI,cAAC9D,GAAA,EAAD,CAAYnJ,QAAS,kBAAMqN,EAAUD,EAAS,IAAIM,SAAqB,IAAXN,EAA5D,SACI,cAACO,GAAA,EAAD,MAEJ,iCACKP,EAAS,EADd,IACkBE,EAAW,KAE7B,cAACnE,GAAA,EAAD,CAAYnJ,QAAS,kBAAMqN,EAAUD,EAAS,IAAIM,SAAUJ,IAAaF,EAAzE,SACI,cAACQ,GAAA,EAAD,a,2FCTdC,GAAmBrP,aAAW,iBAAO,CACvCsP,WAAY,CACRxC,QAAS,OAEbyC,UAAW,CACPC,SAAU,OACVrP,SAAU,SAEdsP,WAAY,CAAEC,MAAO,MAAOvP,SAAU,QAASwP,SAAU,OAGhDC,GAAa,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,MAAOvE,EAAiE,EAAjEA,SAAUmC,EAAuD,EAAvDA,YAAaqC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,SAC3DxG,EAAWC,cACXwG,EAAgBX,KAF2E,EAGvEV,mBAAiB,IAHsD,oBAG1FsB,EAH0F,KAGnFC,EAHmF,KAK3FC,EAAczG,uBAAY,WACP,IAAjBuG,EAAMrN,SAGNiN,EAAM1K,SAAS8K,GACf1G,EAAStB,GAAyB,CAC9BZ,QAAS,mCACTC,SAAU,WAIlBgE,EAAS,GAAD,mBAAKuE,GAAL,CAAYI,KACpBC,EAAS,QACV,CAACD,EAAOJ,EAAOK,EAAU3G,IAEtB6G,EAAe1G,uBAAY,SAACxE,GAC9BoG,EAASuE,EAAMpL,QAAO,SAAAgD,GAAC,OAAIA,IAAMvC,QAClC,CAACoG,EAAUuE,IAEd,OACI,qBAAKxO,UAAW0I,KAAMC,UAAtB,SACI,cAACuD,GAAA,EAAD,CACInM,QAAQ,WACR8M,MAAOT,EACPA,YAAaoC,EAAMjN,OAAS,EAAI6K,OAAc4C,EAC9CjD,MAAO6C,EACP3E,SAAU,SAAAR,GAAC,OAAIoF,EAASpF,EAAEC,OAAOqC,QACjCM,WAAY,CACRV,QAAS,CAAEsD,KAAMN,EAAcT,UAAWU,MAAOD,EAAcP,YAC/D9B,eAAgBkC,EAAMjN,OAAS,EAC3B,mCACKiN,EAAMvO,KAAI,SAAA4D,GAAI,aACX,sBAEI7D,UAAWkP,MAAE,oBACRxG,KAAM7E,MAAO,GADL,eAER6E,KAAMyG,aAAeV,GAFb,eAGR/F,KAAM0G,aAAeV,GAHb,IAFjB,UAQI,+BACK7K,IAEL,cAACyF,GAAA,EAAD,CAAYnJ,QAAS,kBAAM4O,EAAalL,IAAO7D,UAAW2O,EAAcV,WAAxE,SACI,cAAC,KAAD,QAXCpK,aAeXmL,EACVK,aAAc,cAAC9C,GAAA,EAAD,CAAgB3M,SAAS,MAAzB,SACV,cAAC0J,GAAA,EAAD,CAAYnJ,QAAS2O,EAArB,SACI,cAAC,KAAD,cCpEfQ,GAAkB,SAAC,GAA6C,IAA3ClM,EAA0C,EAA1CA,OAAQ8D,EAAkC,EAAlCA,MAChC0E,EAAS3D,YAAYvF,GACrBwF,EAAWC,cAsBjB,OACI,eAACiB,GAAA,EAAD,CAAMpJ,UAAW0I,KAAM6G,WAAvB,UACI,cAAC,GAAD,CACId,UAAQ,EACRD,MAAOpL,EAAOd,iBAAmB,GACjC2H,SApBgB,SAAC3H,GACzB4F,EAASb,GAAa,CAClBH,QACAI,OAAO,2BAAMlE,GAAP,IAAed,wBAkBjB8J,YAAY,oBAEhB,cAAC,GAAD,CACIsC,UAAQ,EACRF,MAAOpL,EAAOG,iBAAmB,GACjC0G,SAhCgB,SAAC1G,GACzB2E,EAASb,GAAa,CAClBH,QACAI,OAAO,2BAAMlE,GAAP,IAAeG,wBA8BjB6I,YAAY,oBAEhB,cAACK,GAAA,EAAD,CACIxC,SAAU,SAACuF,EAAGzD,GAAJ,OAxBK3J,EAwB2B2J,OAvBlD7D,EAASb,GAAa,CAClBH,QACAI,OAAO,2BAAMlE,GAAP,IAAehB,UAAWA,QAAwB4M,OAHtC,IAAC5M,GAyBfqN,aAAcrM,EAAOhB,UACrBpC,UAAW0I,KAAMxG,YACjBwK,QAASd,EACTe,YAAa,SAACC,GAAD,OAAY,cAACV,GAAA,EAAD,2BAAeU,GAAf,IAAuB7M,QAAQ,WAAW8M,MAAM,sCAE7E,cAACvD,GAAA,EAAD,CAAYnJ,QAxBH,WACb+H,EAASX,GAAaL,KAuBlB,SACI,cAAC,KAAD,UCtDHwI,GAAc,WACvB,IAAMxH,EAAWC,cACX9F,EAAU4F,YAAYtG,GAC5B,OACI,gCACI,qBAAK3B,UAAW0I,KAAMiH,eAAtB,SACKtN,EAAQpC,KAAI,SAACmD,EAAQwM,GAAT,OAAiB,cAAC,GAAD,CAAiB1I,MAAO0I,EAAexM,OAAQA,GAAbwM,QAEpE,cAACvF,GAAA,EAAD,CAAQlK,QAAS,kBAAM+H,EAASrB,GAAU,MAAM9G,QAAQ,YAAYlB,MAAM,UAA1E,4BCeGgR,OAnBf,WACI,IAAM/O,EAASmH,YAAYrH,GACrBsH,EAAWC,cAMjB,OALA2H,qBAAU,WACDhP,GACDoH,EAASrC,QAEd,CAAC/E,IAEA,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAciP,KAAMtR,EAAY6L,UAAWC,KAC3C,cAAC,GAAD,CAAcwF,KAAMtR,EAAc6L,UAAWoF,KAC7C,cAAC,GAAD,CAAcK,KAAMtR,EAAW6L,UAAW+C,WCbtC2C,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,sBCbjCC,GAAcC,aAAgB,CAChC3P,IAAK0F,GAASkK,UAGLC,GAAQC,aAAYJ,GAAaK,aAAgBC,O,SCC9DC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,UAIZO,SAASC,eAAe,SFgHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBrM,OAAM,SAACE,GACJD,QAAQC,MAAMA,EAAMa,a,mBGtIpCuL,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,SAAW,wBAAwB,eAAiB,gC,mBCAvHD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,eAAiB,gCAAgC,YAAc,+B,mBCA1HD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,uBAAuB,cAAgB,8BAA8B,iBAAmB,mC,mBCAzJD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,4B,mBCApED,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,aAAe,iCAAiC,aAAe,mC,mBCA3JD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,4BAA4B,cAAgB,6BAA6B,MAAQ,qBAAqB,eAAiB,gC,mBCA7LD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,wB","file":"static/js/main.c99993c5.chunk.js","sourcesContent":["export const urls = {\r\n    home: '/',\r\n    filters: '/filters',\r\n    files: '/files'\r\n};\r\n","import React from 'react';\r\nimport {\r\n    AppBar,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    MenuItem,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { FilterList, Description } from '@material-ui/icons';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { urls } from 'services/urls';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyle = makeStyles({\r\n    listIcon: {\r\n        color: 'white',\r\n        minWidth: '0px',\r\n        paddingRight: '10px'\r\n    },\r\n    title: {\r\n        paddingRight: '20px'\r\n    }\r\n});\r\n\r\nexport const Header = () => {\r\n    const overrideStyle = useStyle();\r\n    const history = useHistory();\r\n    const navigationItems = [\r\n        {\r\n            url: urls.home,\r\n            icon: <ListIcon />,\r\n            text: 'Channels',\r\n        },\r\n        {\r\n            url: urls.filters,\r\n            icon: <FilterList />,\r\n            text: 'Filters',\r\n        },\r\n        {\r\n            url: urls.files,\r\n            icon: <Description />,\r\n            text: 'Files',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={overrideStyle.title} >IPTV M3U Viewer</Typography>\r\n                {navigationItems.map((item) => (\r\n                    <div key={item.text} onClick={() => history.push(item.url)}>\r\n                        <MenuItem>\r\n                            <ListItemIcon className={overrideStyle.listIcon}>{item.icon}</ListItemIcon>\r\n                            <ListItemText primary={item.text} />\r\n                        </MenuItem>\r\n                    </div>\r\n                ))}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n","import { RootState } from '../store';\r\nimport { createSelector } from 'reselect'\r\n\r\nexport const selectAppState = (state: RootState) => state.app;\r\n\r\nexport const selectAppIsLoaded = createSelector(selectAppState, (app) => app.loaded);\r\n\r\nexport const selectSnackbar = createSelector(selectAppState, (app) => app.snakbar);\r\n","export const STORAGE_KEY = {\r\n    FILES: 'files',\r\n    FILTERS: 'filters',\r\n}","import { createSelector } from 'reselect'\r\nimport { selectAppState } from './app';\r\nimport { Entry, File, Filter } from 'types';\r\n\r\nexport const selectFileFilter = createSelector(selectAppState, state => state.fileFilter);\r\nexport const selectAllFiles = createSelector(selectAppState, state => state.files);\r\nexport const selectFiles = createSelector(\r\n    selectAllFiles,\r\n    selectFileFilter,\r\n    (files, fileFilter): File[] => {\r\n        if (!fileFilter || fileFilter.length === 0) {\r\n            return files;\r\n        }\r\n        const file = files.find(file => file.name === fileFilter);\r\n        return file ? [file] : [];\r\n    }\r\n);\r\n\r\nexport const selectPemanentFilter = createSelector(selectAppState, state => state.permanentFilter);\r\n\r\nexport const selectUsingPermanentFilter = createSelector(selectAppState, state => state.usingPermanentFilter);\r\n\r\nexport const selectSearch = createSelector(selectAppState, state => state.search);\r\nexport const selectGroupFilter = createSelector(selectAppState, state => state.groupFilter);\r\nconst selectTemporaryFilter = createSelector(\r\n    selectGroupFilter,\r\n    selectSearch,\r\n    (groupName, search): Filter[] => {\r\n        const filters: Filter[] = [];\r\n        if (search.length > 0) {\r\n            filters.push({ includeKeywords: search.split(' ') });\r\n        }\r\n        if (groupName.length > 0) {\r\n            filters.push({ groupName });\r\n        }\r\n        return filters;\r\n    }\r\n);\r\n\r\nexport const selectFilters = createSelector(\r\n    selectPemanentFilter,\r\n    selectTemporaryFilter,\r\n    selectUsingPermanentFilter,\r\n    (permanentFilter, temporaryFilter, usingPermanentFilter): Filter[] =>\r\n        usingPermanentFilter ? [...permanentFilter, ...temporaryFilter] : temporaryFilter,\r\n)\r\n\r\nexport const selectAllGroups = createSelector(\r\n    selectFiles,\r\n    (files): string[] => Object.keys(files.reduce<Record<string, boolean>>((result, file) => {\r\n        file.entrys.forEach(entry => result[entry.groupName] = true);\r\n        return result;\r\n    }, {})),\r\n)\r\n\r\nconst filterEntrys = (entrys: Entry[], filters: Filter[]): Entry[] => {\r\n    const filterWithGroupName = filters.filter(filter => filter.groupName);\r\n    const filterWithoutGroupName = filters.filter(filter => !filter.groupName);\r\n\r\n    const globalExclude = filterWithoutGroupName.reduce<string[]>((result, filter) => {\r\n        if (!filter.excludeKeywords) {\r\n            return result;\r\n        }\r\n        return [...result, ...filter.excludeKeywords];\r\n    }, []);\r\n    const globalInclude = filterWithoutGroupName.reduce<string[]>((result, filter) => {\r\n        if (!filter.includeKeywords) {\r\n            return result;\r\n        }\r\n        return [...result, ...filter.includeKeywords];\r\n    }, []);\r\n\r\n    return entrys.filter((entry => {\r\n        const entryName = entry.name.toLowerCase();\r\n        if (filterWithGroupName.length > 0) {\r\n            const filter = filterWithGroupName.find(f => f.groupName === entry.groupName);\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            if (filter.includeKeywords && filter.includeKeywords.length > 0 &&\r\n                !filter.includeKeywords.every(word => entryName.includes(word))\r\n            ) {\r\n                return false;\r\n            }\r\n            if (filter.excludeKeywords && filter.excludeKeywords.some(word => entryName.includes(word))) {\r\n                return false;\r\n            }\r\n        }\r\n        if (globalInclude.length > 0 && !globalInclude.every(word => entryName.includes(word))) {\r\n            return false;\r\n        }\r\n        if (globalExclude.some(word => entryName.includes(word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }));\r\n};\r\n\r\nexport const selectEntry = createSelector(selectFiles, selectFilters,\r\n    (files, filters): Entry[] => {\r\n        return files.reduce<Entry[]>((result, file) => [\r\n            ...result,\r\n            ...filterEntrys(file.entrys, filters),\r\n        ], []);\r\n    }\r\n)\r\n\r\nexport const selectGroups = createSelector(\r\n    selectEntry,\r\n    (entrys) => Object.keys(entrys.reduce<Record<string, boolean>>((result, entry) => {\r\n        result[entry.groupName] = true;\r\n        return result;\r\n    }, {}))\r\n)","// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const noop: () => void = () => {};\r\n\r\nimport { get, set } from 'idb-keyval';\r\n\r\nexport const localStorageSet = (key: string, data: string): Promise<void> => {\r\n    return set(key, data);\r\n}\r\n\r\nexport const localStoageGet = (key: string): Promise<string | null | undefined> => {\r\n    return get(key);\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { parse } from 'iptv-playlist-parser';\r\nimport { STORAGE_KEY } from 'services/constants';\r\nimport { selectAllFiles } from 'store/selector/entrys';\r\nimport { RootState } from 'store/store';\r\nimport { File, Filter } from 'types';\r\nimport { localStoageGet, localStorageSet } from 'services/utils';\r\n\r\nexport const loadFile = createAsyncThunk('files/load', async ({ name, data }: { name: string, data: string }, thunkAPI): Promise<File> => {\r\n    const file = parse(data);\r\n    let savePath: string | null = null;\r\n    const files = selectAllFiles(thunkAPI.getState() as RootState)\r\n    for (let i = 0; ; i++) {\r\n        savePath = `file:${name}${i}`;\r\n        if (!files.some(f => f.savedPath === savePath)) {\r\n            break;\r\n        }\r\n    }\r\n    localStorageSet(savePath, data).catch(console.error);\r\n    return {\r\n        id: savePath,\r\n        name,\r\n        savedPath: savePath,\r\n        entrys: file.items.map(item => ({\r\n            groupName: item.group.title,\r\n            fileName: name,\r\n            logo: item.tvg.logo,\r\n            language: item.tvg.language,\r\n            name: item.name,\r\n            url: item.url,\r\n            contry: item.tvg.country\r\n        })),\r\n    }\r\n});\r\n\r\nexport const loadApp = createAsyncThunk('load', async (): Promise<{ filters: Filter[], files: File[] }> => {\r\n    const files = await localStoageGet(STORAGE_KEY.FILES);\r\n    const filters = await localStoageGet(STORAGE_KEY.FILTERS);\r\n    return {\r\n        files: files ? JSON.parse(files) as File[] : [],\r\n        filters: filters ? JSON.parse(filters) as Filter[] : []\r\n    };\r\n});\r\n\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AlertProps } from '@material-ui/lab';\r\nimport { File, Filter } from 'types';\r\nimport { loadApp, loadFile } from './thunks';\r\nimport { STORAGE_KEY } from 'services/constants';\r\nimport { localStorageSet } from 'services/utils';\r\n\r\nexport interface AppSliceState {\r\n    loaded: boolean,\r\n    files: File[],\r\n    search: string,\r\n    groupFilter: string,\r\n    fileFilter: string,\r\n    permanentFilter: Filter[],\r\n    usingPermanentFilter: boolean,\r\n    snakbar: {\r\n        open: boolean,\r\n        message?: string,\r\n        severity?: AlertProps['severity'],\r\n    };\r\n}\r\n\r\nconst initialState: AppSliceState = {\r\n    loaded: false,\r\n    fileFilter: '',\r\n    search: '',\r\n    usingPermanentFilter: true,\r\n    groupFilter: '',\r\n    permanentFilter: [],\r\n    files: [],\r\n    snakbar: {\r\n        open: false,\r\n    },\r\n};\r\n\r\nconst setSnackbarMessage = (state: AppSliceState, message: string, severity: AlertProps['severity']) => {\r\n    state.snakbar = {\r\n        ...state.snakbar,\r\n        open: true,\r\n        message,\r\n        severity,\r\n    };\r\n};\r\n\r\nconst cleanFilter = ({ excludeKeywords, includeKeywords, groupName }: Filter): Filter => ({\r\n    excludeKeywords: excludeKeywords?.map(w => w.toLowerCase()),\r\n    includeKeywords: includeKeywords?.map(w => w.toLowerCase()),\r\n    groupName\r\n});\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        snackbarVisibillityChanged: (state, action: PayloadAction<boolean>) => {\r\n            state.snakbar.open = action.payload;\r\n        },\r\n        snackBarMessagePublished: (\r\n            state,\r\n            action: PayloadAction<{ message: string; severity: AlertProps['severity'] }>,\r\n        ) => {\r\n            setSnackbarMessage(state, action.payload.message, action.payload.severity);\r\n        },\r\n        addFilter: (state, { payload }: PayloadAction<Filter>) => {\r\n            state.permanentFilter.push(cleanFilter(payload));\r\n            localStorageSet(STORAGE_KEY.FILTERS, JSON.stringify(state.permanentFilter)).catch(console.error);\r\n        },\r\n        setSearch: (state, { payload }: PayloadAction<string>) => {\r\n            state.search = payload.toLowerCase();\r\n        },\r\n        setGroupNameFilter: (state, { payload }: PayloadAction<string>) => {\r\n            state.groupFilter = payload;\r\n        },\r\n        deleteFile: (state, { payload }: PayloadAction<File>) => {\r\n            const index = state.files.findIndex(file => file.id === payload.id);\r\n            if (index === -1) {\r\n                setSnackbarMessage(state, 'Failed to delete file', 'error');\r\n                return;\r\n            }\r\n            state.files.splice(index, 1);\r\n            localStorageSet(STORAGE_KEY.FILES, JSON.stringify(state.files)).catch(console.error);\r\n        },\r\n        modifyFilter: (state, { payload }: PayloadAction<{ index: number, update: Filter }>) => {\r\n            state.permanentFilter[payload.index] = cleanFilter(payload.update);\r\n            localStorageSet(STORAGE_KEY.FILTERS, JSON.stringify(state.permanentFilter)).catch(console.error);\r\n        },\r\n        deleteFilter: (state, { payload }: PayloadAction<number>) => {\r\n            state.permanentFilter.splice(payload, 1);\r\n        },\r\n        setUsingPermanentFilter: (state, { payload }: PayloadAction<boolean>) => {\r\n            state.usingPermanentFilter = payload;\r\n        },\r\n        setFileFilter: (state, { payload }: PayloadAction<string>) => {\r\n            state.fileFilter = payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loadFile.fulfilled, (state, { payload }) => {\r\n            state.files.push(payload);\r\n            localStorageSet(STORAGE_KEY.FILES, JSON.stringify(state.files)).catch(console.error);\r\n        });\r\n        builder.addCase(loadFile.rejected, (state, { error }) => {\r\n            console.error(error);\r\n            setSnackbarMessage(state, 'Failed to load your file', 'error');\r\n        });\r\n        builder.addCase(loadApp.fulfilled, (state, { payload }) => {\r\n            state.loaded = true;\r\n            state.files = payload.files;\r\n            state.permanentFilter = payload.filters;\r\n        });\r\n        builder.addCase(loadApp.rejected, (state, { error }) => {\r\n            console.error(error);\r\n            state.loaded = true;\r\n            setSnackbarMessage(state, 'Failed to load the application', 'error');\r\n        });\r\n    },\r\n});\r\n\r\nexport const {\r\n    addFilter,\r\n    setSearch,\r\n    modifyFilter,\r\n    deleteFilter,\r\n    deleteFile,\r\n    setGroupNameFilter,\r\n    setFileFilter,\r\n    snackBarMessagePublished,\r\n    snackbarVisibillityChanged,\r\n    setUsingPermanentFilter,\r\n} = appSlice.actions;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectSnackbar } from 'store/selector/app';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { snackbarVisibillityChanged } from 'store/reducer';\r\nimport { Snackbar as MaterialUiSnackbar } from '@material-ui/core';\r\n\r\nexport const Snackbar = () => {\r\n    const { open, message, severity } = useSelector(selectSnackbar);\r\n    const dispatch = useDispatch();\r\n    const onClose = useCallback(() => {\r\n        dispatch(snackbarVisibillityChanged(false));\r\n    }, [dispatch]);\r\n    return (\r\n        <MaterialUiSnackbar open={open} autoHideDuration={6000} onClose={onClose}>\r\n            <Alert onClose={onClose} severity={severity}>\r\n                {message}\r\n            </Alert>\r\n        </MaterialUiSnackbar>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Header } from './Header';\r\nimport style from './layout.module.css';\r\nimport { Snackbar } from './Snackbar';\r\n\r\nexport const Layout: React.FC = ({ children }) => {\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.header}>\r\n                <Header />\r\n            </div>\r\n            <div className={style.bodyContainer}>\r\n                <div className={style.contentContainer}>{children}</div>\r\n            </div>\r\n            <Snackbar />\r\n        </div>\r\n    );\r\n};\r\n","import { Card, IconButton } from '@material-ui/core';\r\nimport React, { useCallback } from 'react';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { snackBarMessagePublished, deleteFile } from 'store/reducer';\r\nimport { localStoageGet } from 'services/utils';\r\nimport { File } from 'types';\r\nimport fileDownload from 'js-file-download';\r\nimport style from './index.module.css';\r\n\r\ninterface FileComponentProps {\r\n    file: File\r\n}\r\n\r\nexport const FileComponent = ({ file }: FileComponentProps) => {\r\n    const dispatch = useDispatch();\r\n    const onDownload = useCallback(async () => {\r\n        try {\r\n            const data = await localStoageGet(file.savedPath);\r\n            if (!data) {\r\n                throw new Error('Could not find file data');\r\n            }\r\n            fileDownload(data, file.name);\r\n        } catch (e) {\r\n            dispatch(snackBarMessagePublished({\r\n                message: 'Failed to download file',\r\n                severity: 'error',\r\n            }));\r\n        }\r\n    }, [dispatch, file])\r\n    const onDelete = useCallback(() => {\r\n        dispatch(deleteFile(file));\r\n    }, [dispatch, file]);\r\n    return (\r\n        <Card className={style.fileCard}>\r\n            <span>\r\n                {file.name}\r\n            </span>\r\n            <IconButton onClick={onDownload}>\r\n                <DownloadIcon />\r\n            </IconButton>\r\n            <IconButton onClick={onDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </Card>\r\n    )\r\n}","import { Button } from '@material-ui/core';\r\nimport React, { ChangeEvent, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadFile, snackBarMessagePublished } from 'store/reducer';\r\nimport style from './index.module.css';\r\n\r\nexport const FileUploader = () => {\r\n    const dispatch = useDispatch();\r\n    const onFileChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target.files || !e.target.files[0]) {\r\n            return;\r\n        }\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onloadend = () => {\r\n            const content = reader.result as string;\r\n            if (!content) {\r\n                dispatch(snackBarMessagePublished({ message: 'Failed to load file', severity: 'error' }));\r\n                return;\r\n            }\r\n            dispatch(loadFile({ name: file.name, data: content }))\r\n        };\r\n    }, [dispatch]);\r\n\r\n    return <div>\r\n        <input type='file' name='file' onChange={onFileChange} accept='.m3u' id=\"contained-button-file\" className={style.fileUploadInput} />\r\n        <label htmlFor=\"contained-button-file\">\r\n            <Button variant='contained' color='primary' component=\"span\">\r\n                Upload File\r\n            </Button>\r\n        </label>\r\n    </div>\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllFiles } from 'store/selector/entrys';\r\nimport { FileComponent } from './FileComponent';\r\nimport { FileUploader } from './FileUploader';\r\nimport style from './index.module.css'\r\n\r\nexport const Files = () => {\r\n    const files = useSelector(selectAllFiles);\r\n    return <div>\r\n        <div className={style.filesContainer}>\r\n        {files.map(file => <FileComponent key={file.id} file={file} />)}\r\n        </div>\r\n        <FileUploader />\r\n    </div>\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAppIsLoaded } from 'store/selector/app';\r\n\r\nfunction PrivateRoute({ ...other }) {\r\n    const loaded = useSelector(selectAppIsLoaded);\r\n\r\n    if (!loaded) {\r\n        return <CircularProgress />;\r\n    }\r\n\r\n    return <Route {...other} />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\n\r\ninterface DisplayIfProps {\r\n    expr: boolean;\r\n    onElse?: JSX.Element;\r\n}\r\n\r\nexport const DisplayIf: React.FC<DisplayIfProps> = ({ children, expr, onElse }) => {\r\n    if (expr) {\r\n        return <>{children}</>;\r\n    }\r\n    if (onElse) {\r\n        return onElse;\r\n    }\r\n    return null;\r\n};\r\n","import { Card, Typography } from '@material-ui/core';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Entry } from 'types';\r\nimport style from './entry.module.css';\r\nimport { snackBarMessagePublished, snackbarVisibillityChanged } from 'store/reducer'\r\nimport { selectAllFiles, selectFileFilter } from 'store/selector/entrys';\r\nimport { DisplayIf } from 'comonents/DisplayIf';\r\nimport copy from 'copy-to-clipboard';\r\n\r\ninterface EntryComponentProps {\r\n    entry: Entry;\r\n}\r\n\r\nexport const EntryComponent = ({ entry }: EntryComponentProps) => {\r\n    const dispatch = useDispatch();\r\n    const fileFilter = useSelector(selectFileFilter);\r\n    const files = useSelector(selectAllFiles);\r\n    const shouldDisplayFile = fileFilter.length === 0 && files.length > 1;\r\n    const onClick = useCallback(() => {\r\n        const success = copy(entry.url);\r\n        dispatch(snackbarVisibillityChanged(false));\r\n        setTimeout(() => {\r\n            dispatch(snackBarMessagePublished({\r\n                message: success ? `Link Copied - ${entry.name}` : 'Failed to copy link',\r\n                severity: success ? 'success' : 'error',\r\n            }));\r\n        }, 0);\r\n    }, [entry, dispatch]);\r\n    return (\r\n        <Card className={style.container} onClick={onClick}>\r\n            <Typography variant=\"h6\">{entry.name}</Typography>\r\n            <Typography>{entry.groupName}</Typography>\r\n            <DisplayIf expr={shouldDisplayFile}>\r\n                <Typography variant=\"caption\">{entry.fileName}</Typography>\r\n            </DisplayIf>\r\n            <div className={style.imageContainer}>\r\n                <img src={entry.logo} className={style.image} />\r\n            </div>\r\n\r\n        </Card>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Entry } from 'types';\r\nimport { EntryComponent } from './EntryComponent';\r\nimport style from './entrys.module.css'\r\n\r\nexport interface EntrysProps {\r\n    entrys: Entry[];\r\n}\r\n\r\nexport const Entrys = ({ entrys }: EntrysProps) => {\r\n    return (\r\n        <div className={style.container}>\r\n            {entrys.map((entry) => <div key={entry.url} className={style.item}>\r\n                <EntryComponent key={entry.url} entry={entry} />\r\n            </div>)}\r\n        </div>\r\n    );\r\n};\r\n","import React, { ChangeEvent, useCallback } from 'react';\r\nimport { FormControlLabel, InputAdornment, makeStyles, Switch, TextField } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSearch, setGroupNameFilter, setUsingPermanentFilter, setFileFilter } from 'store/reducer';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { selectAllFiles, selectGroups, selectUsingPermanentFilter } from 'store/selector/entrys';\r\nimport style from './index.module.css';\r\nimport { File } from 'types';\r\nimport cl from 'classnames';\r\n\r\nconst useClasses = makeStyles(() => ({\r\n    item: {\r\n        padding: '0 10px',\r\n    }\r\n}));\r\n\r\nexport const QuickFilter = () => {\r\n    const classes = useClasses();\r\n    const dispatch = useDispatch();\r\n    const usingPermanentFilter = useSelector(selectUsingPermanentFilter);\r\n    const groups = useSelector(selectGroups);\r\n    const files = useSelector(selectAllFiles);\r\n    const onFileChange = useCallback((e: ChangeEvent<unknown>, newValue: File | null) => {\r\n        dispatch(setFileFilter(newValue ? newValue.name : ''));\r\n    }, [dispatch]);\r\n    const onSearchChanged = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearch(e.target.value))\r\n    }, [dispatch]);\r\n    const onGroupNameChange = useCallback((e: ChangeEvent<unknown>, newValue: string | null) => {\r\n        dispatch(setGroupNameFilter(newValue || ''));\r\n    }, [dispatch]);\r\n    const toogleUsePermanentFilter = useCallback(() => {\r\n        dispatch(setUsingPermanentFilter(!usingPermanentFilter));\r\n    }, [dispatch, usingPermanentFilter]);\r\n    return (\r\n        <div className={style.container}>\r\n                <TextField\r\n                    className={cl(classes.item, style.item)}\r\n                    placeholder=\"Search...\"\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">\r\n                            <SearchOutlined />\r\n                        </InputAdornment>\r\n                    }}\r\n                    onChange={onSearchChanged}\r\n                />\r\n            <Autocomplete\r\n                className={style.item}\r\n                options={groups}\r\n                onChange={onGroupNameChange}\r\n                renderInput={(params) => <TextField {...params} label=\"Group\" />}\r\n            />\r\n            <Autocomplete\r\n                className={style.item}\r\n                options={files}\r\n                onChange={onFileChange}\r\n                getOptionLabel={file => file.name}\r\n                renderInput={(params) => <TextField {...params} label=\"File\" />}\r\n            />\r\n            <FormControlLabel\r\n                label='Use filters'\r\n                labelPlacement='start'\r\n                control={<Switch checked={usingPermanentFilter} onChange={toogleUsePermanentFilter} />}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectEntry } from 'store/selector/entrys';\r\nimport { Entrys } from './Entrys';\r\nimport { NavigateBefore, NavigateNext } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { QuickFilter } from './QuickFilter/QuickFilter';\r\n\r\nconst MAX_PER_PAGE = 100;\r\n\r\nexport const EntrysPage = () => {\r\n    const [pageNb, setPageNb] = useState(0);\r\n    const entrys = useSelector(selectEntry);\r\n    const maxPages = Math.floor(entrys.length / MAX_PER_PAGE);\r\n    return (\r\n        <div>\r\n            <QuickFilter />\r\n            <Entrys entrys={entrys.slice(pageNb * MAX_PER_PAGE, pageNb * MAX_PER_PAGE + MAX_PER_PAGE)} />\r\n            <div>\r\n                <IconButton onClick={() => setPageNb(pageNb - 1)} disabled={pageNb === 0}>\r\n                    <NavigateBefore />\r\n                </IconButton>\r\n                <span>\r\n                    {pageNb + 1}/{maxPages + 1}\r\n                </span>\r\n                <IconButton onClick={() => setPageNb(pageNb + 1)} disabled={maxPages === pageNb} >\r\n                    <NavigateNext />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { IconButton, InputAdornment, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { useCallback, useState } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/HighlightOff';\r\nimport { useDispatch } from 'react-redux';\r\nimport { snackBarMessagePublished } from 'store/reducer';\r\nimport style from './index.module.css';\r\nimport cx from 'classnames';\r\n\r\ninterface WordsInputProps {\r\n    onChange: (newWords: string[]) => void\r\n    words: string[]\r\n    placeholder: string\r\n    positive?: boolean\r\n    negative?: boolean\r\n}\r\n\r\nconst useStyleOverride = makeStyles(() => ({\r\n    deleteIcon: {\r\n        padding: '5px',\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n        minWidth: '300px'\r\n    },\r\n    inputInput: { width: '0px', minWidth: '140px', flexGrow: 1 },\r\n}))\r\n\r\nexport const WordsInput = ({ words, onChange, placeholder, positive, negative }: WordsInputProps) => {\r\n    const dispatch = useDispatch();\r\n    const styleOverride = useStyleOverride();\r\n    const [input, setInput] = useState<string>('');\r\n\r\n    const onWordAdded = useCallback(() => {\r\n        if (input.length === 0) {\r\n            return;\r\n        }\r\n        if (words.includes(input)) {\r\n            dispatch(snackBarMessagePublished({\r\n                message: 'This word is already in the list',\r\n                severity: 'info',\r\n            }));\r\n            return;\r\n        }\r\n        onChange([...words, input]);\r\n        setInput('');\r\n    }, [input, words, setInput, dispatch]);\r\n\r\n    const onWordDelete = useCallback((word: string) => {\r\n        onChange(words.filter(w => w !== word));\r\n    }, [onChange, words]);\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <TextField\r\n                variant='outlined'\r\n                label={placeholder}\r\n                placeholder={words.length > 0 ? placeholder : undefined}\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                InputProps={{\r\n                    classes: { root: styleOverride.inputRoot, input: styleOverride.inputInput },\r\n                    startAdornment: words.length > 0 ?\r\n                        <>\r\n                            {words.map(word => (\r\n                                <div\r\n                                    key={word}\r\n                                    className={cx({\r\n                                        [style.word]: true,\r\n                                        [style.positiveWord]: positive,\r\n                                        [style.negativeWord]: negative,\r\n                                    })}\r\n                                >\r\n                                    <span>\r\n                                        {word}\r\n                                    </span>\r\n                                    <IconButton onClick={() => onWordDelete(word)} className={styleOverride.deleteIcon}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            ))}\r\n                        </> : undefined,\r\n                    endAdornment: <InputAdornment position='end'>\r\n                        <IconButton onClick={onWordAdded}>\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n};\r\n","import { Card, IconButton, TextField } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAllGroups } from 'store/selector/entrys';\r\nimport { Filter } from 'types';\r\nimport style from './index.module.css'\r\nimport { WordsInput } from './WordsInput/WordsInput';\r\nimport { modifyFilter, deleteFilter } from 'store/reducer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport interface FilterComponentProps {\r\n    filter: Filter\r\n    index: number\r\n}\r\n\r\nexport const FilterComponent = ({ filter, index }: FilterComponentProps) => {\r\n    const groups = useSelector(selectAllGroups);\r\n    const dispatch = useDispatch();\r\n    const onExcludeListChange = (excludeKeywords: string[]) => {\r\n        dispatch(modifyFilter({\r\n            index,\r\n            update: { ...filter, excludeKeywords },\r\n        }));\r\n    };\r\n    const onIncludeListChange = (includeKeywords: string[]) => {\r\n        dispatch(modifyFilter({\r\n            index,\r\n            update: { ...filter, includeKeywords },\r\n        }));\r\n    }\r\n    const onGroupNameChange = (groupName: string | null) => {\r\n        dispatch(modifyFilter({\r\n            index,\r\n            update: { ...filter, groupName: groupName ? groupName : undefined },\r\n        }));\r\n    }\r\n    const onDelete = () => {\r\n        dispatch(deleteFilter(index));\r\n    }\r\n    return (\r\n        <Card className={style.filterCard}>\r\n            <WordsInput\r\n                positive\r\n                words={filter.includeKeywords || []}\r\n                onChange={onIncludeListChange}\r\n                placeholder='Include Keyword'\r\n            />\r\n            <WordsInput\r\n                negative\r\n                words={filter.excludeKeywords || []}\r\n                onChange={onExcludeListChange}\r\n                placeholder='Exclude keyword'\r\n            />\r\n            <Autocomplete\r\n                onChange={(_, value) => onGroupNameChange(value)}\r\n                defaultValue={filter.groupName}\r\n                className={style.groupFilter}\r\n                options={groups}\r\n                renderInput={(params) => <TextField {...params} variant='outlined' label=\"Group Filter (All by default)\" />}\r\n            />\r\n            <IconButton onClick={onDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </Card>\r\n    )\r\n}","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFilter } from 'store/reducer';\r\nimport { selectPemanentFilter } from 'store/selector/entrys';\r\nimport { FilterComponent } from './FilterComponent';\r\nimport style from './index.module.css'\r\n\r\nexport const FiltersPage = () => {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(selectPemanentFilter);\r\n    return (\r\n        <div>\r\n            <div className={style.cardsContainer}>\r\n                {filters.map((filter, idx) => <FilterComponent index={idx} key={idx} filter={filter} />)}\r\n            </div>\r\n            <Button onClick={() => dispatch(addFilter({}))} variant='contained' color='primary' >\r\n                Add Filter\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Layout } from './comonents/Layout/Layout';\r\nimport { Switch } from 'react-router-dom';\r\nimport { urls } from 'services/urls';\r\nimport { Files } from 'scenes/Files/Files';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAppIsLoaded } from 'store/selector/app';\r\nimport { loadApp } from 'store/reducer';\r\nimport PrivateRoute from 'comonents/PrivateRoute';\r\nimport { EntrysPage } from 'scenes/Entrys/EntrysPage';\r\nimport { FiltersPage } from 'scenes/Filters/FiltersPage';\r\n\r\nfunction App() {\r\n    const loaded = useSelector(selectAppIsLoaded);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            dispatch(loadApp());\r\n        }\r\n    }, [loaded]);\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <PrivateRoute path={urls.files} component={Files} />\r\n                <PrivateRoute path={urls.filters} component={FiltersPage} />\r\n                <PrivateRoute path={urls.home} component={EntrysPage} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from '@reduxjs/toolkit';\r\nimport { appSlice } from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appSlice.reducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileUploadInput\":\"Files_fileUploadInput__142c8\",\"fileCard\":\"Files_fileCard__2yKC4\",\"filesContainer\":\"Files_filesContainer__2IqcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterCard\":\"Filters_filterCard__1-JJ5\",\"cardsContainer\":\"Filters_cardsContainer__2CmDC\",\"groupFilter\":\"Filters_groupFilter__1i0KZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout_container__2OVO2\",\"header\":\"layout_header__w-Sd-\",\"bodyContainer\":\"layout_bodyContainer__24Dcs\",\"contentContainer\":\"layout_contentContainer__1Pxmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuickFilter_container__24rXK\",\"item\":\"QuickFilter_item__3dgXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordsInput_container__31jPG\",\"word\":\"WordsInput_word__1iFO1\",\"positiveWord\":\"WordsInput_positiveWord__1U_fH\",\"negativeWord\":\"WordsInput_negativeWord__jWlEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"entry_container__3xlh6\",\"rowContainer\":\"entry_rowContainer__3ScOE\",\"fileContainer\":\"entry_fileContainer__1tG-T\",\"image\":\"entry_image__2jZXZ\",\"imageContainer\":\"entry_imageContainer__2Bd8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"entrys_container__1mZGu\",\"item\":\"entrys_item__2k8Nh\"};"],"sourceRoot":""}